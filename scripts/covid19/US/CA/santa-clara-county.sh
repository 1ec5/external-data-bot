#!/bin/bash

# Fetch the current table as JSON
curl 'https://commons.wikimedia.org/wiki/Data:COVID-19_cases_in_Santa_Clara_County,_California.tab?action=raw' > commons.json

# Fetch the new cases by day
curl 'https://data.sccgov.org/resource/6cnm-gchg.json' | jq 'map({date: (.date | split("T")[0]), newCases: (.new_cases | tonumber), totalConfirmedCases: (.total_cases | tonumber)})' > casesbyday.json

# Fetch the dashboard's UI, which contains the last updated date and number of undated cases
curl 'https://wabi-us-gov-virginia-api.analysis.usgovcloudapi.net/public/reports/5f5823b5-f805-4579-848b-9061c6c4750b/modelsAndExploration?preferReadOnlySession=true' --compressed -H 'X-PowerBI-ResourceKey: 5f5823b5-f805-4579-848b-9061c6c4750b' > ui.json

# Fetch the current cases by gender
# Find the current total number of cases, including undated cases, by summing all the groups including Unknown
curl 'https://data.sccgov.org/resource/ibdk-7rf5.json' | jq 'map(.count | tonumber) | add | {totalConfirmedCasesInclUndated: .}' > totalcases.json

# Fetch the hospitalizations by day
# curl 'https://data.sccgov.org/resource/5xkz-6esm.json' > 
curl 'https://wabi-us-gov-virginia-api.analysis.usgovcloudapi.net/public/reports/querydata' --compressed --data '{"version":"1.0.0","queries":[{"Query":{"Commands":[{"SemanticQueryDataShapeCommand":{"Query":{"Version":2,"From":[{"Name":"t","Entity":"trends","Type":0}],"Select":[{"Column":{"Expression":{"SourceRef":{"Source":"t"}},"Property":"Date"},"Name":"trends.Date"},{"Aggregation":{"Expression":{"Column":{"Expression":{"SourceRef":{"Source":"t"}},"Property":"covid_pct_7davg"}},"Function":0},"Name":"Sum(trends.covid_pct_7davg)"},{"Aggregation":{"Expression":{"Column":{"Expression":{"SourceRef":{"Source":"t"}},"Property":"covid_total"}},"Function":0},"Name":"Sum(trends.covid_total)"},{"Aggregation":{"Expression":{"Column":{"Expression":{"SourceRef":{"Source":"t"}},"Property":"pui_total"}},"Function":0},"Name":"Sum(trends.pui_total)"},{"Aggregation":{"Expression":{"Column":{"Expression":{"SourceRef":{"Source":"t"}},"Property":"covid_pui_pct_7davg"}},"Function":0},"Name":"Sum(trends.covid_pui_pct_7davg)"}],"Where":[{"Condition":{"Between":{"Expression":{"Column":{"Expression":{"SourceRef":{"Source":"t"}},"Property":"Date"}},"LowerBound":{"DateSpan":{"Expression":{"DateAdd":{"Expression":{"DateAdd":{"Expression":{"DateAdd":{"Expression":{"Now":{}},"Amount":-1,"TimeUnit":0}},"Amount":1,"TimeUnit":0}},"Amount":-30,"TimeUnit":0}},"TimeUnit":0}},"UpperBound":{"DateSpan":{"Expression":{"DateAdd":{"Expression":{"Now":{}},"Amount":-1,"TimeUnit":0}},"TimeUnit":0}}}}}]},"Binding":{"Primary":{"Groupings":[{"Projections":[0,1,2,3,4]}]},"DataReduction":{"DataVolume":4,"Primary":{"Sample":{}}},"Version":1}}}]},"CacheKey":"{\"Commands\":[{\"SemanticQueryDataShapeCommand\":{\"Query\":{\"Version\":2,\"From\":[{\"Name\":\"t\",\"Entity\":\"trends\",\"Type\":0}],\"Select\":[{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"t\"}},\"Property\":\"Date\"},\"Name\":\"trends.Date\"},{\"Aggregation\":{\"Expression\":{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"t\"}},\"Property\":\"covid_pct_7davg\"}},\"Function\":0},\"Name\":\"Sum(trends.covid_pct_7davg)\"},{\"Aggregation\":{\"Expression\":{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"t\"}},\"Property\":\"covid_total\"}},\"Function\":0},\"Name\":\"Sum(trends.covid_total)\"},{\"Aggregation\":{\"Expression\":{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"t\"}},\"Property\":\"pui_total\"}},\"Function\":0},\"Name\":\"Sum(trends.pui_total)\"},{\"Aggregation\":{\"Expression\":{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"t\"}},\"Property\":\"covid_pui_pct_7davg\"}},\"Function\":0},\"Name\":\"Sum(trends.covid_pui_pct_7davg)\"}],\"Where\":[{\"Condition\":{\"Between\":{\"Expression\":{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"t\"}},\"Property\":\"Date\"}},\"LowerBound\":{\"DateSpan\":{\"Expression\":{\"DateAdd\":{\"Expression\":{\"DateAdd\":{\"Expression\":{\"DateAdd\":{\"Expression\":{\"Now\":{}},\"Amount\":-1,\"TimeUnit\":0}},\"Amount\":1,\"TimeUnit\":0}},\"Amount\":-30,\"TimeUnit\":0}},\"TimeUnit\":0}},\"UpperBound\":{\"DateSpan\":{\"Expression\":{\"DateAdd\":{\"Expression\":{\"Now\":{}},\"Amount\":-1,\"TimeUnit\":0}},\"TimeUnit\":0}}}}}]},\"Binding\":{\"Primary\":{\"Groupings\":[{\"Projections\":[0,1,2,3,4]}]},\"DataReduction\":{\"DataVolume\":4,\"Primary\":{\"Sample\":{}}},\"Version\":1}}}]}","QueryId":"","ApplicationContext":{"DatasetId":"98358f41-2327-449a-aa33-91c26301646a","Sources":[{"ReportId":"b751de7a-ad18-4a85-82d5-579bde5195a0"}]}}],"cancelQueries":[],"modelId":344051}' > dashboard.json

# Convert date from number of milliseconds to YYYY-MM-DD
# Fill in counts repeated from previous days:
#  - If R = 2, then 1 repeats
#  - If R = 4, then 2 repeats
#  - If R = 6, then 1 and 2 repeat
#  - If R = 8, then 3 repeats
jq 'def eval_repeats(key): foreach .[] as $row (0; ($row[key] // .); . as $x | $row | (.[key] = (.[key] // $x))); def by_day(key): .results | map(.result.data) | map((.descriptor.Select[] | select(.Name | contains(key))) as $field | ($field | .Value[1:] | tonumber) as $index | .dsr.DS[0].PH[0].DM0 | map(select(has("Ø") | not) | {date: (.C[0] / 1000 | strftime("%Y-%m-%d")), ($field.Name): (if .R == 2 then .C = .C[:1] + [null] + .C[1:] elif .R == 4 then .C = .C[:2] + [null] + .C[2:] elif .R == 6 then .C = .C[:1] + [null, null] + .C[1:] elif .R == 8 then .C = .C[:3] + [null] + .C[3:] else . end | .C[$index + 1])}) | [eval_repeats($field.Name)]); by_day("_total") | add | group_by(.date) | map(add)' dashboard.json > hosp.json

# Fetch the deaths by day
# curl 'https://data.sccgov.org/resource/tg4j-23y2.json' | jq 'map(.date = (.date | sub("T.+"; "")) | {date: .date, deaths: .cumulative})' > deaths.json
curl 'https://wabi-us-gov-virginia-api.analysis.usgovcloudapi.net/public/reports/querydata' --compressed --data '{"version":"1.0.0","queries":[{"Query":{"Commands":[{"SemanticQueryDataShapeCommand":{"Query":{"Version":2,"From":[{"Name":"d","Entity":"death_date","Type":0}],"Select":[{"Column":{"Expression":{"SourceRef":{"Source":"d"}},"Property":"Date"},"Name":"death_date.Date"},{"Aggregation":{"Expression":{"Column":{"Expression":{"SourceRef":{"Source":"d"}},"Property":"LTCF"}},"Function":0},"Name":"Sum(death_date.LTCF)"},{"Aggregation":{"Expression":{"Column":{"Expression":{"SourceRef":{"Source":"d"}},"Property":"Non_ltcf"}},"Function":0},"Name":"Sum(death_date.Non_ltcf)"},{"Aggregation":{"Expression":{"Column":{"Expression":{"SourceRef":{"Source":"d"}},"Property":"Cumulative"}},"Function":0},"Name":"Sum(death_date.Cumulative)"}]},"Binding":{"Primary":{"Groupings":[{"Projections":[0,1,2,3]}]},"DataReduction":{"DataVolume":4,"Primary":{"Sample":{}}},"Version":1}}}]},"CacheKey":"{\"Commands\":[{\"SemanticQueryDataShapeCommand\":{\"Query\":{\"Version\":2,\"From\":[{\"Name\":\"d\",\"Entity\":\"death_date\",\"Type\":0}],\"Select\":[{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"d\"}},\"Property\":\"Date\"},\"Name\":\"death_date.Date\"},{\"Aggregation\":{\"Expression\":{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"d\"}},\"Property\":\"LTCF\"}},\"Function\":0},\"Name\":\"Sum(death_date.LTCF)\"},{\"Aggregation\":{\"Expression\":{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"d\"}},\"Property\":\"Non_ltcf\"}},\"Function\":0},\"Name\":\"Sum(death_date.Non_ltcf)\"},{\"Aggregation\":{\"Expression\":{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"d\"}},\"Property\":\"Cumulative\"}},\"Function\":0},\"Name\":\"Sum(death_date.Cumulative)\"}]},\"Binding\":{\"Primary\":{\"Groupings\":[{\"Projections\":[0,1,2,3]}]},\"DataReduction\":{\"DataVolume\":4,\"Primary\":{\"Sample\":{}}},\"Version\":1}}}]}","QueryId":"","ApplicationContext":{"DatasetId":"af9678ae-d901-4e62-8dc1-7f01ddda4f61","Sources":[{"ReportId":"0814c897-cde8-45f4-bb7d-4ec57edcb077"}]}}],"cancelQueries":[],"modelId":344055}' > dashboard.json

# Convert date from number of milliseconds to YYYY-MM-DD
# Fill in counts repeated from previous days:
#  - If R = 2, then 1 repeats
#  - If R = 4, then 2 repeats
#  - If R = 6, then 1 and 2 repeat
# Calculate a running total
jq 'def eval_repeats(key): foreach .[] as $row (0; ($row[key] // .); . as $x | $row | (.[key] = (.[key] // $x))); def accumulate(key): foreach .[] as $row (0; . + $row[key]; . as $x | $row | (.["total:" + key] = $x)); def by_day(key): .results | map(.result.data) | map((.descriptor.Select[] | select(.Name | contains(key))) as $field | ($field | .Value[1:] | tonumber) as $index | .dsr.DS[0].PH[0].DM0 | map(select(has("Ø") | not) | {date: (.C[0] / 1000 | strftime("%Y-%m-%d")), ($field.Name): (if .R == 2 then .C = .C[:1] + [null] + .C[1:] elif .R == 4 then .C = .C[:2] + [null] + .C[2:] elif .R == 6 then .C = .C[:1] + [null, null] + .C[1:] else . end | .C[$index + 1])}) | [eval_repeats($field.Name)]); by_day("Cumulative")[0]' dashboard.json > deaths.json

# Compile statistics for today
# Convert last updated date from number of milliseconds to YYYY-MM-DD
# Total case count for today is the total case count as of today minus the undated case count
jq -s '{date: (.[0].models[].lastRefreshTime | match("/Date\\((\\d+)\\)/").captures[0].string | tonumber | . / 1000 | gmtime | .[3] -= 7 | mktime | strftime("%Y-%m-%d"))} + .[1]' ui.json totalcases.json > today.json

# Update the table's existing entries with new data from the dashboard, adding a row for today
# New case count for today is total case count for today minus total case count for yesterday
jq -s --tab 'def eval_repeats(key): foreach .[] as $row (0; ($row[key] // .); . as $x | $row | (.[key] = (.[key] // $x))); .[0] as $commons | (.[0].data | map({date: .[0], newCases: .[1], totalConfirmedCases: null, hospitalized: .[3], hospitalizedPUI: .[4], deaths: null, undatedCases: .[6]})) + .[1] + (.[2] | map({date: .date, hospitalized: .["Sum(trends.covid_total)"], hospitalizedPUI: .["Sum(trends.pui_total)"]})) + (.[3] | map(.deaths = .["Sum(death_date.Cumulative)"])) + [.[4]] | group_by(.date)  | map(map(with_entries(select(.value != null))) | add) | .[-1].totalConfirmedCases = (.[-1].totalConfirmedCases // .[-2].totalConfirmedCases // .[-3].totalConfirmedCases) | .[-1].undatedCases = (.[-1].totalConfirmedCasesInclUndated - .[-1].totalConfirmedCases) | map([.date, .newCases, .totalConfirmedCases, .hospitalized, .hospitalizedPUI, .deaths, .undatedCases]) | [eval_repeats(5)] as $data | $commons | .data = $data' commons.json casesbyday.json hosp.json deaths.json today.json | expand -t4
