#!/bin/bash

# Fetch the current table as JSON
curl 'https://commons.wikimedia.org/wiki/Data:COVID-19_cases_in_Alameda_County,_California.tab?action=raw' > commons.json

# Fetch the current cases and deaths
#curl 'https://services5.arcgis.com/ROBnTHSNjoZ2Wm1P/ArcGIS/rest/services/COVID_19_Daily_Cases_and_Deaths/FeatureServer/0/query?where=1%3D1&outFields=dtcreate%2CBerkeley_Berkeley_LHJ%2CBerkeley_Berkeley_LHJ_Cumulativ%2CBerkeley_Berkeley_LHJ_Deaths%2CBerkeley_Berkeley_LHJ_Deaths_Cu%2CAlameda_County_LHJ%2CAlameda_County_LHJ_Cumulative%2CAlameda_County_LHJ_Deaths%2CAlameda_County_LHJ_Deaths__Cumu%2CAlameda_County%2CAlameda_County__Cumulative%2CAlameda_County_Deaths%2CAlameda_County_Deaths__Cumulati&sqlFormat=none&f=json' | jq '.features | map(.attributes | map_values((strings | tonumber) // .) | .date = (.dtcreate / 1000 | todate | split("T")[0]) | select(.date < "2022-03-04" or .["Alameda_County_LHJ"] > 0))' > dates.json

curl 'https://wabi-us-gov-iowa-api.analysis.usgovcloudapi.net/public/reports/querydata?synchronous=true' --compressed -X POST --data-raw '{"version":"1.0.0","queries":[{"Query":{"Commands":[{"SemanticQueryDataShapeCommand":{"Query":{"Version":2,"From":[{"Name":"v","Entity":"V_Combined_data","Type":0}],"Select":[{"Column":{"Expression":{"SourceRef":{"Source":"v"}},"Property":"DtCreate"},"Name":"V_Combined_data.DtCreate"},{"Measure":{"Expression":{"SourceRef":{"Source":"v"}},"Property":"Not7DayFlagMeasure"},"Name":"V_Combined_data.Not7DayFlagMeasure"},{"Measure":{"Expression":{"SourceRef":{"Source":"v"}},"Property":"7 day flag measure"},"Name":"V_Combined_data.7 day flag measure"}]},"Binding":{"Primary":{"Groupings":[{"Projections":[0,1,2]}]},"DataReduction":{"DataVolume":4,"Primary":{"Sample":{}}},"Version":1},"ExecutionMetricsKind":1}}]},"CacheKey":"{\"Commands\":[{\"SemanticQueryDataShapeCommand\":{\"Query\":{\"Version\":2,\"From\":[{\"Name\":\"v\",\"Entity\":\"V_Combined_data\",\"Type\":0}],\"Select\":[{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"v\"}},\"Property\":\"DtCreate\"},\"Name\":\"V_Combined_data.DtCreate\"},{\"Measure\":{\"Expression\":{\"SourceRef\":{\"Source\":\"v\"}},\"Property\":\"Not7DayFlagMeasure\"},\"Name\":\"V_Combined_data.Not7DayFlagMeasure\"},{\"Measure\":{\"Expression\":{\"SourceRef\":{\"Source\":\"v\"}},\"Property\":\"7 day flag measure\"},\"Name\":\"V_Combined_data.7 day flag measure\"}]},\"Binding\":{\"Primary\":{\"Groupings\":[{\"Projections\":[0,1,2]}]},\"DataReduction\":{\"DataVolume\":4,\"Primary\":{\"Sample\":{}}},\"Version\":1},\"ExecutionMetricsKind\":1}}]}","CacheOptions":7,"QueryId":"","ApplicationContext":{"DatasetId":"d4923c43-5fc4-444c-aa95-8ecf0d15f562","Sources":[{"ReportId":"5080f005-6411-4a22-88b0-ff13c00d140f","VisualId":"7e8ab2b00017cc85bbee"}]}}],"cancelQueries":[],"modelId":295360}' > dashboard.json
jq 'def eval_repeats(key): foreach .[] as $row (0; ($row[key] // .); . as $x | $row | (.[key] = (.[key] // $x))); def by_day(key): .results | map(.result.data) | map((.descriptor.Select[] | select(.Name | contains(key))) as $field | ($field | .Value[1:] | tonumber) as $index | .dsr.DS[0].PH[0].DM0 | map(select(has("Ø") | not) | {date: (.C[0] / 1000 | strftime("%Y-%m-%d")), ($field.Name): (if .R and .R / 2 == $index + 1 then null elif .R and .R / 2 < $index + 1 then .C[$index] else .C[$index + 1] end)}) | [eval_repeats($field.Name)]); by_day("V_Combined_data.Not7DayFlagMeasure")[0] | map({date: .date, AC_Cases: .["V_Combined_data.Not7DayFlagMeasure"]})' dashboard.json > newcases.json

curl 'https://wabi-us-gov-iowa-api.analysis.usgovcloudapi.net/public/reports/querydata?synchronous=true' --compressed -X POST --data-raw '{"version":"1.0.0","queries":[{"Query":{"Commands":[{"SemanticQueryDataShapeCommand":{"Query":{"Version":2,"From":[{"Name":"v","Entity":"V_Combined_data","Type":0}],"Select":[{"Column":{"Expression":{"SourceRef":{"Source":"v"}},"Property":"DtCreate"},"Name":"V_Combined_data.DtCreate"},{"Measure":{"Expression":{"SourceRef":{"Source":"v"}},"Property":"Cumulative Cases"},"Name":"V_Combined_data.Cumulative Cases"}]},"Binding":{"Primary":{"Groupings":[{"Projections":[0,1]}]},"DataReduction":{"DataVolume":4,"Primary":{"BinnedLineSample":{}}},"Version":1},"ExecutionMetricsKind":1}}]},"CacheKey":"{\"Commands\":[{\"SemanticQueryDataShapeCommand\":{\"Query\":{\"Version\":2,\"From\":[{\"Name\":\"v\",\"Entity\":\"V_Combined_data\",\"Type\":0}],\"Select\":[{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"v\"}},\"Property\":\"DtCreate\"},\"Name\":\"V_Combined_data.DtCreate\"},{\"Measure\":{\"Expression\":{\"SourceRef\":{\"Source\":\"v\"}},\"Property\":\"Cumulative Cases\"},\"Name\":\"V_Combined_data.Cumulative Cases\"}]},\"Binding\":{\"Primary\":{\"Groupings\":[{\"Projections\":[0,1]}]},\"DataReduction\":{\"DataVolume\":4,\"Primary\":{\"BinnedLineSample\":{}}},\"Version\":1},\"ExecutionMetricsKind\":1}}]}","QueryId":"","ApplicationContext":{"DatasetId":"d4923c43-5fc4-444c-aa95-8ecf0d15f562","Sources":[{"ReportId":"5080f005-6411-4a22-88b0-ff13c00d140f","VisualId":"fa53a8f5a0c6ed8b97a9"}]}}],"cancelQueries":[],"modelId":295360}' > dashboard.json
jq 'def eval_repeats(key): foreach .[] as $row (0; ($row[key] // .); . as $x | $row | (.[key] = (.[key] // $x))); def by_day(key): .results | map(.result.data) | map((.descriptor.Select[] | select(.Name | contains(key))) as $field | ($field | .Value[1:] | tonumber) as $index | .dsr.DS[0].PH[0].DM0 | map(select(has("Ø") | not) | {date: (.C[0] / 1000 | strftime("%Y-%m-%d")), ($field.Name): (if .R and .R / 2 == $index + 1 then null elif .R and .R / 2 < $index + 1 then .C[$index] else .C[$index + 1] end)}) | [eval_repeats($field.Name)]); by_day("V_Combined_data.Cumulative Cases")[0] | map({date: .date, AC_CumulCases: .["V_Combined_data.Cumulative Cases"]})' dashboard.json > cases.json

curl 'https://wabi-us-gov-iowa-api.analysis.usgovcloudapi.net/public/reports/querydata?synchronous=true' --compressed -X POST --data-raw '{"version":"1.0.0","queries":[{"Query":{"Commands":[{"SemanticQueryDataShapeCommand":{"Query":{"Version":2,"From":[{"Name":"v1","Entity":"V_Deaths_Weekly","Type":0}],"Select":[{"Aggregation":{"Expression":{"Column":{"Expression":{"SourceRef":{"Source":"v1"}},"Property":"Deaths"}},"Function":0},"Name":"CountNonNull(V_Deaths_Weekly.Deaths)","NativeReferenceName":"Deaths"},{"Column":{"Expression":{"SourceRef":{"Source":"v1"}},"Property":"Week Ending"},"Name":"V_Deaths_Weekly.Week Ending","NativeReferenceName":"Week Ending"}]},"Binding":{"Primary":{"Groupings":[{"Projections":[1,0]}]},"DataReduction":{"DataVolume":4,"Primary":{"Sample":{}}},"Version":1},"ExecutionMetricsKind":1}}]},"CacheKey":"{\"Commands\":[{\"SemanticQueryDataShapeCommand\":{\"Query\":{\"Version\":2,\"From\":[{\"Name\":\"v1\",\"Entity\":\"V_Deaths_Weekly\",\"Type\":0}],\"Select\":[{\"Aggregation\":{\"Expression\":{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"v1\"}},\"Property\":\"Deaths\"}},\"Function\":0},\"Name\":\"CountNonNull(V_Deaths_Weekly.Deaths)\",\"NativeReferenceName\":\"Deaths\"},{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"v1\"}},\"Property\":\"Week Ending\"},\"Name\":\"V_Deaths_Weekly.Week Ending\",\"NativeReferenceName\":\"Week Ending\"}]},\"Binding\":{\"Primary\":{\"Groupings\":[{\"Projections\":[1,0]}]},\"DataReduction\":{\"DataVolume\":4,\"Primary\":{\"Sample\":{}}},\"Version\":1},\"ExecutionMetricsKind\":1}}]}","QueryId":"","ApplicationContext":{"DatasetId":"e6e6dffc-275c-4471-ba84-6fcc7c2f530e","Sources":[{"ReportId":"965eb0ca-2c5f-47ba-833f-ff5e6a3f6265","VisualId":"48391479adec2eeeeb28"}]}}],"cancelQueries":[],"modelId":559480}' > dashboard.json
jq 'def eval_repeats(key): foreach .[] as $row (0; ($row[key] // .); . as $x | $row | (.[key] = (.[key] // $x))); def by_day(key): .results | map(.result.data) | map((.descriptor.Select[] | select(.Name | contains(key))) as $field | ($field | .Value[1:] | tonumber) as $index | .dsr.DS[0].PH[0].DM0 | map(select(has("Ø") | not) | {date: (.C[0] / 1000 | strftime("%Y-%m-%d")), ($field.Name): (if .R and .R / 2 == $index + 1 then null elif .R and .R / 2 < $index + 1 then .C[$index] else .C[$index + 1] end)}) | [eval_repeats($field.Name)]); by_day("CountNonNull(V_Deaths_Weekly.Deaths)")[0] | map({date: .date, AC_Deaths: .["CountNonNull(V_Deaths_Weekly.Deaths)"]})' dashboard.json > newdeaths.json

curl 'https://wabi-us-gov-iowa-api.analysis.usgovcloudapi.net/public/reports/querydata?synchronous=true' --compressed -X POST --data-raw '{"version":"1.0.0","queries":[{"Query":{"Commands":[{"SemanticQueryDataShapeCommand":{"Query":{"Version":2,"From":[{"Name":"v1","Entity":"V_Deaths_Weekly","Type":0}],"Select":[{"Column":{"Expression":{"SourceRef":{"Source":"v1"}},"Property":"Week Ending"},"Name":"V_Deaths_Weekly.Week Ending","NativeReferenceName":"Week Ending"},{"Aggregation":{"Expression":{"Column":{"Expression":{"SourceRef":{"Source":"v1"}},"Property":"ConfirmedCumulativeDeaths"}},"Function":0},"Name":"Sum(V_Deaths_Weekly.ConfirmedCumulativeDeaths)","NativeReferenceName":"ConfirmedCumulativeDeaths1"}]},"Binding":{"Primary":{"Groupings":[{"Projections":[0,1]}]},"DataReduction":{"DataVolume":4,"Primary":{"BinnedLineSample":{}}},"Version":1},"ExecutionMetricsKind":1}}]},"CacheKey":"{\"Commands\":[{\"SemanticQueryDataShapeCommand\":{\"Query\":{\"Version\":2,\"From\":[{\"Name\":\"v1\",\"Entity\":\"V_Deaths_Weekly\",\"Type\":0}],\"Select\":[{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"v1\"}},\"Property\":\"Week Ending\"},\"Name\":\"V_Deaths_Weekly.Week Ending\",\"NativeReferenceName\":\"Week Ending\"},{\"Aggregation\":{\"Expression\":{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"v1\"}},\"Property\":\"ConfirmedCumulativeDeaths\"}},\"Function\":0},\"Name\":\"Sum(V_Deaths_Weekly.ConfirmedCumulativeDeaths)\",\"NativeReferenceName\":\"ConfirmedCumulativeDeaths1\"}]},\"Binding\":{\"Primary\":{\"Groupings\":[{\"Projections\":[0,1]}]},\"DataReduction\":{\"DataVolume\":4,\"Primary\":{\"BinnedLineSample\":{}}},\"Version\":1},\"ExecutionMetricsKind\":1}}]}","QueryId":"","ApplicationContext":{"DatasetId":"e6e6dffc-275c-4471-ba84-6fcc7c2f530e","Sources":[{"ReportId":"965eb0ca-2c5f-47ba-833f-ff5e6a3f6265","VisualId":"850e18710d4fe38fc673"}]}}],"cancelQueries":[],"modelId":559480}' > dashboard.json
jq 'def eval_repeats(key): foreach .[] as $row (0; ($row[key] // .); . as $x | $row | (.[key] = (.[key] // $x))); def by_day(key): .results | map(.result.data) | map((.descriptor.Select[] | select(.Name | contains(key))) as $field | ($field | .Value[1:] | tonumber) as $index | .dsr.DS[0].PH[0].DM0 | map(select(has("Ø") | not) | {date: (.C[0] / 1000 | strftime("%Y-%m-%d")), ($field.Name): (if .R and .R / 2 == $index + 1 then null elif .R and .R / 2 < $index + 1 then .C[$index] else .C[$index + 1] end)}) | [eval_repeats($field.Name)]); by_day("V_Deaths_Weekly.Week Ending")[0] | map({date: .date, AC_CumulDeaths: .["V_Deaths_Weekly.Week Ending"]})' dashboard.json > deaths.json

jq -s '(.[0] + .[1] + .[2] + .[3]) | group_by(.date) | map(add)' newcases.json cases.json newdeaths.json deaths.json > dates.json

# Fetch the hospitalizations by day from the dashboard
# Convert date from number of milliseconds to YYYY-MM-DD
# Fill in counts repeated from previous days, which are indicated by C = null, R = 2
curl 'https://wabi-us-gov-iowa-api.analysis.usgovcloudapi.net/public/reports/querydata?synchronous=true' --compressed -X POST --data-raw '{"version":"1.0.0","queries":[{"Query":{"Commands":[{"SemanticQueryDataShapeCommand":{"Query":{"Version":2,"From":[{"Name":"t","Entity":"Tbl_Hospitalizations","Type":0}],"Select":[{"Column":{"Expression":{"SourceRef":{"Source":"t"}},"Property":"Date"},"Name":"Tbl_Hospitalizations.Date"},{"Aggregation":{"Expression":{"Column":{"Expression":{"SourceRef":{"Source":"t"}},"Property":"3a# Confirmed positive hospitalizated"}},"Function":0},"Name":"Sum(Tbl_Hospitalizations.3a# Confirmed positive hospitalizated)"},{"Aggregation":{"Expression":{"Column":{"Expression":{"SourceRef":{"Source":"t"}},"Property":"5b# Covid ICU confirmed positive"}},"Function":0},"Name":"Sum(Tbl_Hospitalizations.5b# Covid ICU confirmed positive)"}]},"Binding":{"Primary":{"Groupings":[{"Projections":[0,1,2]}]},"DataReduction":{"DataVolume":4,"Primary":{"BinnedLineSample":{}}},"Version":1},"ExecutionMetricsKind":1}}]},"CacheKey":"{\"Commands\":[{\"SemanticQueryDataShapeCommand\":{\"Query\":{\"Version\":2,\"From\":[{\"Name\":\"t\",\"Entity\":\"Tbl_Hospitalizations\",\"Type\":0}],\"Select\":[{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"t\"}},\"Property\":\"Date\"},\"Name\":\"Tbl_Hospitalizations.Date\"},{\"Aggregation\":{\"Expression\":{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"t\"}},\"Property\":\"3a# Confirmed positive hospitalizated\"}},\"Function\":0},\"Name\":\"Sum(Tbl_Hospitalizations.3a# Confirmed positive hospitalizated)\"},{\"Aggregation\":{\"Expression\":{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"t\"}},\"Property\":\"5b# Covid ICU confirmed positive\"}},\"Function\":0},\"Name\":\"Sum(Tbl_Hospitalizations.5b# Covid ICU confirmed positive)\"}]},\"Binding\":{\"Primary\":{\"Groupings\":[{\"Projections\":[0,1,2]}]},\"DataReduction\":{\"DataVolume\":4,\"Primary\":{\"BinnedLineSample\":{}}},\"Version\":1},\"ExecutionMetricsKind\":1}}]}","CacheOptions":7,"QueryId":"","ApplicationContext":{"DatasetId":"d4dfb3f4-9f51-4a0e-bb5b-d02063c27e02","Sources":[{"ReportId":"1bb49985-f852-4eaf-ae6b-ebc955422ac8","VisualId":"0ac9b427700c1bed5a9d"}]}}],"cancelQueries":[],"modelId":295461}' > dashboard.json
jq 'def eval_repeats(key): foreach .[] as $row (0; ($row[key] // .); . as $x | $row | (.[key] = (.[key] // $x))); def by_day(key): .results | map(.result.data) | map((.descriptor.Select[] | select(.Name | contains(key))) as $field | ($field | .Value[1:] | tonumber) as $index | .dsr.DS[0].PH[0].DM0 | map(select(has("Ø") | not) | {date: (.C[0] / 1000 | strftime("%Y-%m-%d")), ($field.Name): (if .R and .R / 2 == $index + 1 then null elif .R and .R / 2 < $index + 1 then .C[$index] else .C[$index + 1] end)}) | [eval_repeats($field.Name)]); by_day("Confirmed positive hospitalizated")[0] | map({date: .date, hospitalized: .["Sum(Tbl_Hospitalizations.3a# Confirmed positive hospitalizated)"]})' dashboard.json > hosp.json

# Update the table's existing entries with new data from the dashboard
jq -s --tab 'def eval_repeats(series): series | foreach .[] as $row ({}; . * $row; .); .[0].data = (((.[0].data | map([["date", "BkLHJ_Cases", "BkLHJ_CumulCases", "BkLHJ_Deaths", "BkLHJ_CumulDeaths", "ACLHJ_Cases", "ACLHJ_CumulCases", "ACLHJ_Deaths", "ACLHJ_Deaths", "AC_Cases", "AC_CumulCases", "AC_Deaths", "AC_CumulDeaths", "IGNORE hospitalized"], .] | transpose | map({key: .[0], value: .[1]}) | from_entries)) + .[1] + .[2]) | group_by(.date) | map(add) | map([.date, .BkLHJ_Cases, .BkLHJ_CumulCases, .BkLHJ_Deaths, .BkLHJ_CumulDeaths, .ACLHJ_Cases, .ACLHJ_CumulCases, .ACLHJ_Deaths, .ACLHJ_Deaths, .AC_Cases, .AC_CumulCases, .AC_Deaths, .AC_CumulDeaths, .hospitalized])) | .[0]' commons.json dates.json hosp.json | expand -t4
